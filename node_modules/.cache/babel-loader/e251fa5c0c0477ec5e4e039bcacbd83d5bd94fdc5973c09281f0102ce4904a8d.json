{"ast":null,"code":"var _jsxFileName = \"/Users/AleksandrMisenincev/Desktop/dev/todos/src/components/ToDoList/ToDoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ToDoItem from '../ToDoItem/ToDoItem';\nimport useActions from \"../../hooks/useActions\";\nimport { useTypedSelector } from \"../../hooks/useTypedSelector\";\nimport './ToDoList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ToDoList() {\n  _s();\n  const [state, setState] = useState(() => {\n    return {\n      task: \"\"\n    };\n  });\n  const {\n    todos\n  } = useTypedSelector(state => state);\n  const {\n    addTask\n  } = useActions();\n  let status = 'All';\n  const changeInput = event => {\n    event.persist();\n    setState(prev => {\n      return {\n        ...prev,\n        [event.target.name]: event.target.value\n      };\n    });\n  };\n  const clickAdd = () => {\n    addTask(state.task);\n    setState(prev => {\n      return {\n        ...prev,\n        task: ''\n      };\n    });\n  };\n  const onKeyDown = ({\n    keyCode\n  }) => {\n    if (keyCode === 13) {\n      addTask(state.task);\n      return setState(prev => {\n        return {\n          ...prev,\n          task: ''\n        };\n      });\n    }\n  };\n  if (todos.taskListStatus === 'All') {\n    status = 'All';\n  }\n  if (todos.taskListStatus === 'Active') {\n    status = true;\n  }\n  if (todos.taskListStatus === 'Completed') {\n    status = false;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"to-do-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"to-do-list__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"to-do-list__container-input\",\n        type: \"task\",\n        id: \"task\",\n        name: \"task\",\n        value: state.task,\n        onChange: changeInput,\n        onKeyDown: onKeyDown,\n        placeholder: \"\\u041A\\u0430\\u043A\\u0438\\u0435 \\u043F\\u043B\\u0430\\u043D\\u044B \\u043D\\u0430 \\u0441\\u0435\\u0433\\u043E\\u0434\\u043D\\u044F?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clickAdd,\n        className: \"to-do-list__container-button\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"to-do-list__container-task\",\n      children: todos.tasks && todos.tasks.filter(item => status === \"All\" ? true : item.status === status).map(item => /*#__PURE__*/_jsxDEV(ToDoItem, {\n        ...item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 9\n  }, this);\n}\n_s(ToDoList, \"I8ZuPZc5BJxkAkoU4IjqZiAZP8U=\", false, function () {\n  return [useTypedSelector, useActions];\n});\n_c = ToDoList;\nvar _c;\n$RefreshReg$(_c, \"ToDoList\");","map":{"version":3,"names":["React","useState","ToDoItem","useActions","useTypedSelector","jsxDEV","_jsxDEV","ToDoList","_s","state","setState","task","todos","addTask","status","changeInput","event","persist","prev","target","name","value","clickAdd","onKeyDown","keyCode","taskListStatus","className","children","type","id","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","tasks","filter","item","map","_c","$RefreshReg$"],"sources":["/Users/AleksandrMisenincev/Desktop/dev/todos/src/components/ToDoList/ToDoList.tsx"],"sourcesContent":["import React, {useState} from 'react'\nimport ToDoItem from '../ToDoItem/ToDoItem';\nimport useActions from \"../../hooks/useActions\";\nimport {useTypedSelector} from \"../../hooks/useTypedSelector\";\nimport {Task} from \"../../interfaces/todos.slice.interface\";\nimport './ToDoList.css';\n\ninterface TodosInterface {\n    'task': string\n}\n\nexport default function ToDoList() {\n\n    const [state, setState] = useState((): TodosInterface => {\n        return {\n            task: \"\"\n        }\n    });\n\n    const {todos} = useTypedSelector(state => state);\n\n    const {addTask} = useActions();\n\n    let status: boolean | string = 'All';\n\n    const changeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\n        event.persist();\n        setState(prev => {\n            return {\n                ...prev,\n                [event.target.name]: event.target.value,\n            }\n        })\n    };\n\n    const clickAdd = () => {\n        addTask(state.task);\n        setState(prev => {\n            return {\n                ...prev,\n                task: '',\n            }\n        })\n    };\n\n    const onKeyDown = ({keyCode}: React.KeyboardEvent<HTMLInputElement>) => {\n        if (keyCode === 13) {\n            addTask(state.task);\n            return setState(prev => {\n                return {\n                    ...prev,\n                    task: '',\n                }\n            })\n        }\n    };\n\n    if (todos.taskListStatus === 'All') {\n        status = 'All';\n    }\n    if (todos.taskListStatus === 'Active') {\n        status = true;\n    }\n    if (todos.taskListStatus === 'Completed') {\n        status = false;\n    }\n\n    return (\n        <div className=\"to-do-list\">\n            <div className=\"to-do-list__container\">\n                < input\n                    className=\"to-do-list__container-input\"\n                    type=\"task\"\n                    id=\"task\"\n                    name=\"task\"\n                    value={state.task}\n                    onChange={changeInput}\n                    onKeyDown={onKeyDown}\n                    placeholder=\"Какие планы на сегодня?\"\n                />\n                <button\n                    onClick={clickAdd}\n                    className=\"to-do-list__container-button\"\n                >+\n                </button>\n            </div>\n            <div className='to-do-list__container-task'>\n                {todos.tasks && todos.tasks.filter((item: Task) =>\n                    (status === \"All\" ?\n                        true\n                        :\n                        item.status === status)\n                ).map((item: Task) => (\n                    <ToDoItem {...item} />\n                ))}\n            </div>\n        </div>\n    );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}